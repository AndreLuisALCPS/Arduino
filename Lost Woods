
const int buttonPin = 2;     // pushbutton
const int ledPin = 13;       // LED indicador (opcional)
const int speakerPin = 11;   // alto-falante

const int led1Pin = 3;       // LED rítmico 1
const int led2Pin = 4;       // LED rítmico 2

const int songLength = 88;

int notes[] = {
  698,880,988,698,880,988,698,880,988,1319,1175,988,1047,988,784,659,587,659,784,659,
  698,880,988,698,880,988,698,880,988,1319,1175,988,1047,1319,988,784,988,784,587,659,
  587,659,698,784,880,988,1047,988,659,698,784,880,988,1047,1175,1319,1397,1568,
  587,659,698,784,880,988,1047,988,659,
  784,698,880,784,988,880,1047,988,1175,1047,1319,1175,1397,1319,1319,1397,1175,1319,
  0,0,0
};

int beats[] = {
  2,2,4,2,2,4,2,2,2,2,4,2,2,2,2,8,2,2,2,10,
  2,2,4,2,2,4,2,2,2,2,4,2,2,2,2,8,2,2,2,10,
  2,2,4,2,2,4,2,2,8,2,2,4,2,2,4,2,2,8,
  2,2,4,2,2,4,2,2,8,
  2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,2,6,
  4,2,2
};

int tempo = 120;

int buttonState = HIGH;         // Estado atual do botão
int lastButtonState = HIGH;     // Estado anterior do botão
bool isPlaying = false;         // Música em execução?
unsigned long lastDebounceTime = 0;
unsigned long debounceDelay = 50;  // Debounce (ms)

void setup() {
  pinMode(buttonPin, INPUT_PULLUP);  // Pino do botão com pull-up interno
  pinMode(speakerPin, OUTPUT);
  pinMode(ledPin, OUTPUT);           // LED indicador
  pinMode(led1Pin, OUTPUT);          // LED rítmico 1
  pinMode(led2Pin, OUTPUT);          // LED rítmico 2
}

void loop() {
  int reading = digitalRead(buttonPin);

  // Debounce
  if (reading != lastButtonState) {
    lastDebounceTime = millis();
  }

  if ((millis() - lastDebounceTime) > debounceDelay) {
    if (reading != buttonState) {
      buttonState = reading;

      // Detectou pressionamento
      if (buttonState == LOW) {
        isPlaying = !isPlaying;  // Alterna entre tocar/parar
        digitalWrite(ledPin, isPlaying ? HIGH : LOW);  // LED indicador
      }
    }
  }

  lastButtonState = reading;

  if (isPlaying) {
    for (int i = 0; i < songLength && isPlaying; i++) {
      int duration = beats[i] * tempo;

      // Liga LEDs rítmicos
      digitalWrite(led1Pin, HIGH);
      digitalWrite(led2Pin, HIGH);

      if (notes[i] == 0) {
        delay(duration);
      } else {
        tone(speakerPin, notes[i], duration);
        delay(duration);
      }

      // Desliga LEDs
      digitalWrite(led1Pin, LOW);
      digitalWrite(led2Pin, LOW);

      delay(tempo / 10);  // Pausa entre notas

      // Verifica se o botão foi pressionado para parar
      reading = digitalRead(buttonPin);
      if (reading == LOW) {
        isPlaying = false;
        digitalWrite(ledPin, LOW);
        digitalWrite(led1Pin, LOW);
        digitalWrite(led2Pin, LOW);
        break;
      }
    }
  }
}
